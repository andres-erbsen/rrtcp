Concerns:
    - Empty comments allowed
    - Email parsing not working correctly
    - Searching not working correctly
            
Harder to grade Meteor projects because a lot of stuff we learn in class is done on the backend in meteor
Great for your grade but hard if you don't use Meteor on later projects

Searching Functionality:

Donald: Searching functionality weird
Victor: Was a problem with query format, should be fixed now

Email Parsing:

Xinyue: The email parsing was a problem with the email format, not our parser, we don't parse the body, like we said in our design document
Donald: You can't just parse the subject line, have to parse the entire email
Xinyue: Yeah but most emails will just have the subject line
Donald: Yeah but that's making an assumption, only tailoring to a subset of the emails.
Victor: The MVP is out of 15 points...
Donald: Yeah but this is out of 100, don't worry
Xinyue: I'm still concerned about parsing the body, because it might have noisy/wrong information
Victor: We could prioritize the subject line parsing, then do the body otherwise
Xinyue: Okay

Donald: How do you parse 10-250?
Xinyue: We parse out just the building number, don't get confused with the room
Donald: I would display the entire room number if you can so you can narrow it down more quickly
Asya: It includes the text of the email, so you can tell that way

Asya: <Go through agenda of things to do>

Donald: I'm worried about displaying a huge email.
Victor: Yeah, it's truncated.
Donald: It would still be better not to have to read the whole body
Xinyue: Okay, yeah, we can extract more of the location

Haoran: <Go through agenda of things to do>

Victor: Consider using DDP rate-limiter built into Meteor

Xinyue: Right now test emails sent to special email address so we don't mess up real mailing list, and we can add TAs to the list.
Donald: Okay.
Xinyue: We can't find free SMS API so we'll go with a paid one, hopefully won't cost too much.
Donald: Twilio is half a cent per text.
Xinyue: I am flying to California so can't make it to the meeting tomorrow.
Tony: If you use Twilio, can choose to buy credit which allows any phone number, or if you are okay verifying each phone number each time, it's free.
Donald: It might be not worth the time frame to figure that out, can just paid 75 cents, and just make sure you cancel it.
Tony: Don't worry, Donald will reimburse you.

Victor: <Go through agenda of things to do>
Donald: How does the subscription form look?
Victor: <shows form>
Donald: Okay cool, so it saves your phone number between uses.

Xinyue: Is code style with Meteor okay?
Donald: Yeah, it looks good.
Xinyue: Do you have any security concenrs? We use the packages we have.
Donald: I noticed you don't have input escaping in this case (map). Main issue with this is someone inserting a script. There are packages that automatically strip that away.
Victor: Is there anything we should look out for in Document.insert({}).
Donald: I mean you have to make sure JSON that's passed doesn't have malicious data.
Asya: I think Meteor might do that automatically?
Victor: I mean, you can't modify our database with an insert right?
Asya: Could you do something like SQL injection for Mongo?
Donald: No, you can't do that. Mongo treats everything as plain text, so even if you have an actual script it won't get executed.
Victor: Okay, so what we'll do is we'll sanitize any user content before showing it.
Donald: No you should do it before, so you don't even have malicious code sitting in the database and don't have to worry about it. Clean the data right before insrting.
